"some x : everything, y : everything | System[x] && NetworkTraffic[y] && Routable[y] && Has[x,y]","['System', 'NetworkTraffic', 'Routable', 'Has']","['x', 'y', 'y', 'x,y']","[' x is a system', ' y is network traffic', ' y is routable', ' x has y ']"
"all w : everything | File[w] => (some x : everything, y : everything | Format[x] && ContentScanningEngine[y] && InFormat[w, x] && CanParseAndInspect[y, x])","['File', 'Format', 'ContentScanningEngine', 'InFormat', 'CanParseAndInspect']","['w', 'x', 'y', 'w,x', 'y,x']","[' w is a file', ' x is a format', ' y is a content scanning engine', ' w is in format x ', ' y can parse and inspect x ']"
"all x : everything | File[x] => (some y : everything | DigitalSignature[y] && UsableForAuthenticityCheck[y] && (ContainsDigitalSignature[x, y] || ReferencesDigitalSignature[x, y]))","['File', 'DigitalSignature', 'ContainsDigitalSignature', 'ReferencesDigitalSignature', 'UsableForAuthenticityCheck']","['x', 'y', 'x, y', 'x, y', 'y']","[' x is a file', ' y is a digital signature', ' x contains y as a digital signature', ' x references y as a digital signature', ' y can be used for authenticity check']"
some x : everything | EventSource[x] && AuthenticationEventLogsAvailable[x],"['EventSource', 'AuthenticationEventLogsAvailable']","['x', 'x']","[' x is an event source', ' authentication event logs are available from x ']"
"some w : everything, x : everything | (Rule[w] || Policy[w] || Signature[w]) && Element[x] && DefinesRemovalOf[w,x]","['Rule', 'Policy', 'Signature', 'Element', 'DefinesRemovalOf']","['w', 'w', 'w', 'x', 'w,x']","[' w is a rule', ' w is a policy', ' w is a signature', ' x is an element', ' w defines removal of x ']"
all x : everything | CredentialRelatedMemoryDump[x] => Accessible[x],"['CredentialRelatedMemoryDump', 'Accessible']","['x', 'x']","[' x is a credential-related memory dump', ' x is accessible']"
all x : everything | (PacketInspection[x] && MonitorsTrafficFlows[x]) implies Enabled[x],"['PacketInspection', 'MonitorsTrafficFlows', 'Enabled']","['x', 'x', 'x']","[' x is packet inspection', ' x monitors traffic flows', ' x is enabled']"
"all y : everything, z : everything, w : everything | DNSQuery[y] && ( (Domain[z] && ForDomain[y,z]) || (Subdomain[w] && ForSubdomain[y,w]) ) implies some x : everything | System[x] && ActivelyResolving[x,y]","['System', 'DNSQuery', 'Domain', 'Subdomain', 'ForDomain', 'ForSubdomain', 'ActivelyResolving']","['x', 'y', 'z', 'w', 'y,z', 'y,w', 'x,y']","[' x is a system', ' y is a DNS query', ' z is a domain', ' w is a subdomain', ' y is for z ', ' y is for w ', ' x is actively resolving y ']"
"some x : everything, y : everything | System[x] && SessionManagementPolicy[y] && Enforces[x, y]","['System', 'SessionManagementPolicy', 'Enforces']","['x', 'y', 'x, y']","[' x is a system', ' y is a session management policy', ' x enforces y ']"
"all x : everything, y : everything | RoutingPolicy[x] && Traffic[y] => some z : everything | SecurePath[z] && DirectsThrough[x,y,z]","['RoutingPolicy', 'Traffic', 'SecurePath', 'DirectsThrough']","['x', 'y', 'z', 'x,y,z']","[' x is a routing policy', ' y is traffic', ' z is a secure path', ' x directs y through z ']"
"all x : everything, y : everything | (SecurityModule[x] && CryptographicVerification[y] && Performs[x, y]) implies Enabled[x]","['SecurityModule', 'CryptographicVerification', 'Performs', 'Enabled']","['x', 'y', 'x,y', 'x']","[' x is a security module', ' y is a cryptographic verification', ' x performs y ', ' x is enabled ']"
all x : everything | Session[x] implies DurationMeasurable[x],"['Session', 'DurationMeasurable']","['x', 'x']","[' x is a session', ' the duration of x is measurable']"
"all x : everything | Subject[x] implies (some y : everything, z : everything | Credential[y] && AccessControlSystem[z] && Possesses[x,y] && Valid[y] && RecognizedBy[y,z])","['Subject', 'Credential', 'AccessControlSystem', 'Possesses', 'Valid', 'RecognizedBy']","['x', 'y', 'z', 'x,y', 'y', 'y,z']","[' x is a subject', ' y is a credential', ' z is an access control system', ' x possesses y ', ' y is valid', ' y is recognized by z ']"
"some x : everything, y : everything | DNSQuery[x] && DomainName[y] && IssuedFor[x,y]","['DNSQuery', 'DomainName', 'IssuedFor']","['x', 'y', 'x,y']","[' x is a DNS query', ' y is a domain name', ' x is issued for y ']"
"some x : everything, y : everything | System[x] && CommunicationCommunity[y] && (SupportsLogicFor[x,Clustering[y]] || SupportsLogicFor[x,Identifying[y]])","['System', 'CommunicationCommunity', 'SupportsLogicFor', 'Clustering', 'Identifying']","['x', 'y', 'x,w', 'w', 'w']","[' x is a system', ' y is a communication community', ' x supports logic for w ', ' w is clustering a communication community', ' w is identifying a communication community']"
"all z : everything | (Scan[z] && Proceeds[z]) implies (some x : everything, y : everything | RuleSet[x] && RuleEngine[y] && Available[x] && LoadedInto[x, y])","['Scan', 'Proceeds', 'RuleSet', 'RuleEngine', 'Available', 'LoadedInto']","['z', 'z', 'x', 'y', 'x', 'x,y']","[' z is a scan', ' z proceeds', ' x is a rule set', ' y is a rule engine', ' x is available', ' x is loaded into y ']"
"all x : everything, y : everything | System[x] && Content[y] implies (some z : everything | Form[z] && ContentInForm[y,z] && FormAllowsInspection[z] && HasAccessTo[x,y])","['System', 'Content', 'Form', 'ContentInForm', 'FormAllowsInspection', 'HasAccessTo']","['x', 'y', 'z', 'y,z', 'z', 'x,y']","[' x is a system', ' y is content', ' z is a form', ' y is in form z ', ' z allows inspection', ' x has access to y ']"
"all x : everything | System[x] implies (some y : everything, z : everything | BaselineBehaviorModel[y] && HistoricalData[z] && CanCreateFrom[x, y, z])","['System', 'BaselineBehaviorModel', 'HistoricalData', 'CanCreateFrom']","['x', 'y', 'z', 'x, y, z']","[' x is a system', ' y is a baseline behavior model', ' z is historical data', ' x can create y from z ']"
"all x : everything | WebSystem[x] implies (some y : everything | AuthenticationMechanism[y] && Configured[y] && Active[y] && HasAuthenticationMechanism[x,y])","['WebSystem', 'AuthenticationMechanism', 'Configured', 'Active', 'HasAuthenticationMechanism']","['x', 'y', 'y', 'y', 'x,y']","[' x is a web system', ' y is an authentication mechanism', ' y is configured', ' y is active', ' x has authentication mechanism y ']"
"some x : everything | CanonicalFormatOrSchema[x] && Defined[x] && (some y : everything | Allows[x,y]) && (some z : everything | SpecifiesReconstruction[x,z])","['CanonicalFormatOrSchema', 'Defined', 'Allows', 'SpecifiesReconstruction']","['x', 'x', 'x,y', 'x,z']","[' x is a canonical format or schema', ' x is defined', ' x allows y', ' x specifies how z is reconstructed']"
"all x : everything | Kernel[x] implies some y : everything | NativeFeature[y] && Implements[x,y] && ProvidesProcessIsolation[y]","['Kernel', 'NativeFeature', 'Implements', 'ProvidesProcessIsolation']","['x', 'y', 'x,y', 'y']","[' x is a kernel', ' y is a native feature', ' x implements y ', ' y provides process isolation ']"
some x : everything | System[x] && IPToGeolocationResolutionEnabled[x],"['System', 'IPToGeolocationResolutionEnabled']","['x', 'x']","[' x is a system', ' IP-to-geolocation resolution is enabled in x ']"
"some w : everything, x : everything | System[w] && List[x] && Has[w,x] && all y : everything | Contains[x, y] implies CriticalSystemFile[y]","['System', 'List', 'Has', 'Contains', 'CriticalSystemFile']","['w', 'x', 'w,x', 'x,y', 'y']","[' w is a system', ' x is a list', ' w has x', ' x contains y', ' y is a critical system file']"
"all x : everything | DomainName[x] implies (some y : everything | (NetworkActivity[y] || SystemActivity[y]) && (ObservedFrom[x,y] || CapturedFrom[x,y]))","['DomainName', 'NetworkActivity', 'SystemActivity', 'ObservedFrom', 'CapturedFrom']","['x', 'y', 'y', 'x,y', 'x,y']","[' x is a domain name', ' y is a network activity', ' y is a system activity', ' x is observed from y ', ' x is captured from y ']"
"all x : everything, y : everything | Application[x] && ExecutionContext[y] && PartOf[y,x] implies (Tracks[x,y] && EnforcesSeparation[x,y])","['Application', 'ExecutionContext', 'PartOf', 'Tracks', 'EnforcesSeparation']","['x', 'y', 'y,x', 'x,y', 'x,y']","[' x is an application', ' y is an execution context', ' y is part of x ', ' x tracks y ', ' x enforces separation for y ']"
all x : everything | FileSystemActivity[x] implies (LoggingEnabled[x] || MonitoringEnabled[x]),"['FileSystemActivity', 'LoggingEnabled', 'MonitoringEnabled']","['x', 'x', 'x']","[' x is related to file system activity', ' logging of x is enabled', ' monitoring of x is enabled']"
"all x : everything | ServiceBinaryFile[x] && ToBeVerified[x] implies (some y : everything | System[y] && ExistsOn[x,y])","['ServiceBinaryFile', 'ToBeVerified', 'System', 'ExistsOn']","['x', 'x', 'y', 'x,y']","[' x is a service binary file', ' x is to be verified', ' y is a system', ' x exists on y']"
"all y : everything | Sandbox[y] implies (some x : everything | SystemObservability[x] && EnabledIn[x,y] && RecordBehavior[x])","['Sandbox', 'SystemObservability', 'EnabledIn', 'RecordBehavior']","['y', 'x', 'x,y', 'x']","[' y is a sandbox', ' x is a system observability mechanism', ' x is enabled in y', ' x records behavior']"
"all y : everything | System[y] implies some x : everything | CryptographicHashFunction[x] && AvailableOn[x,y]","['System', 'CryptographicHashFunction', 'AvailableOn']","['y', 'x', 'x,y']","[' y is a system', ' x is a cryptographic hash function', ' x is available on y ']"
"some x : everything, y : everything, z : everything, w : everything | System[x] && FunctionalitySupportedBy[x,y] && ReadsLeadingBytes[y,z] && ComparesWithExpectedValue[y,z,w] && MagicNumber[w]","['System', 'FunctionalitySupportedBy', 'ReadsLeadingBytes', 'ComparesWithExpectedValue', 'MagicNumber']","['x', 'x,y', 'y,z', 'y,z,w', 'w']","[' x is a system', ' x supports functionality y ', ' y reads the leading bytes of z ', ' y compares z with expected value w ', ' w is a magic number ']"
"some x : everything, y : everything, z : everything, w : everything | Subject[x] && PhysicalFacility[y] && Request[z] && Time[w] && InitiatesRequest[x,z] && RequestForAccessTo[z,y] && AtTime[z,w]","['Subject', 'PhysicalFacility', 'Request', 'Time', 'InitiatesRequest', 'RequestForAccessTo', 'AtTime']","['x', 'y', 'z', 'w', 'x,z', 'z,y', 'z,w']","[' x is a subject', ' y is a physical facility', ' z is a request', ' w is a time', ' x initiates request z', ' request z is for access to y', ' request z occurs at w']"
"some x : everything, y : everything | System[x] && Baseline[y] && TypicalRPCOperation[y] && Maintains[x,y]","['System', 'Baseline', 'TypicalRPCOperation', 'Maintains']","['x', 'y', 'y', 'x,y']","[' x is a system', ' y is a baseline', ' y describes typical RPC operation(s)', ' x maintains y']"
"all x : everything | (FirewallService[x] && Hardened[x]) implies (all y : everything | ConfigurationChange[y] && Unauthorized[y] implies Detects[x,y])","['FirewallService', 'Hardened', 'ConfigurationChange', 'Unauthorized', 'Detects']","['x', 'x', 'y', 'y', 'x,y']","[' x is a firewall service', ' x is hardened', ' y is a configuration change', ' y is unauthorized', ' x detects y']"
"all x : everything | System[x] implies (some y : everything | PolicyOrRuleSet[y] && HasPolicyOrRuleSet[x,y] && all z : everything | (User[z] || Group[z]) implies SpecifiesAccess[y,z])","['System', 'PolicyOrRuleSet', 'HasPolicyOrRuleSet', 'User', 'Group', 'SpecifiesAccess']","['x', 'y', 'x,y', 'z', 'z', 'y,z']","[' x is a system', ' y is a policy or rule set', ' x has policy or rule set y', ' z is a user', ' z is a group', ' y specifies access for z']"
"all x : everything, y : everything | System[x] && Protocol[y] && Administrative[y] implies Recognizes[x,y]","['System', 'Protocol', 'Administrative', 'Recognizes']","['x', 'y', 'y', 'x,y']","[' x is a system', ' y is a protocol', ' y is administrative', ' x recognizes y ']"
all x : everything | ForensicTool[x] && (AnalyzesMemory[x] || AnalyzesDisk[x]) implies (Available[x] && Configured[x]),"['ForensicTool', 'AnalyzesMemory', 'AnalyzesDisk', 'Available', 'Configured']","['x', 'x', 'x', 'x', 'x']","[' x is a forensic tool', ' x is able to analyze memory', ' x is able to analyze disk contents', ' x is available', ' x is configured']"
all x : everything | JobMonitoring[x] implies Enabled[x] && all y : everything | System[y] implies ConfiguredToAllowAccessToExternalReputationServices[y],"['JobMonitoring', 'Enabled', 'System', 'ConfiguredToAllowAccessToExternalReputationServices']","['x', 'x', 'y', 'y']","[' x is job monitoring', ' x is enabled', ' y is a system', ' y is configured to allow access to external reputation services']"
"all x : everything, y : everything | (System[x] && FileFormatSpecification[y]) implies HasAccessTo[x, y]","['System', 'FileFormatSpecification', 'HasAccessTo']","['x', 'y', 'x,y']","[' x is a system', ' y is a file format specification', ' x has access to y ']"
"all x : everything, y : everything | FilteringDevice[x] && Inbound[y] implies CanObserveSourceIP[x,y]","['FilteringDevice', 'Inbound', 'CanObserveSourceIP']","['x', 'y', 'x,y']","[' x is a filtering device', ' y is inbound', ' x can observe the source IP of y ']"
"all x : everything | Administrator[x] implies (some y : everything | Rule[y] && Defines[x,y] && Deploys[x,y] && (all z : everything | File[z] && DeterminesDenial[y,z] implies DeniedExecution[z]))","['Administrator', 'Rule', 'Defines', 'Deploys', 'File', 'DeterminesDenial', 'DeniedExecution']","['x', 'y', 'x,y', 'x,y', 'z', 'y,z', 'z']","[' x is an administrator', ' y is a rule', ' x defines y ', ' x deploys y ', ' z is a file', ' y determines z is denied', ' z is denied execution']"
"all x : everything | Hash[x] implies some y : everything | ReputationSource[y] && Available[y] && CanLookup[y,x]","['Hash', 'ReputationSource', 'Available', 'CanLookup']","['x', 'y', 'y', 'y,x']","[' x is a hash', ' y is a reputation source', ' y is available', ' y can look up x ']"
"some x : everything | ( (AllowList[x] || DenyList[x]) && ( (some y : everything | DeviceType[y] && ConfiguredFor[x, y]) || (some z : everything | FileType[z] && ConfiguredFor[x, z]) ) )","['AllowList', 'DenyList', 'DeviceType', 'FileType', 'ConfiguredFor']","['x', 'x', 'y', 'z', 'x,y / x,z']","[' x is an allow list', ' x is a deny list', ' y is a device type', ' z is a file type', ' x is configured for y OR x is configured for z']"
all x : everything | IndirectBranchInstruction[x] implies ExecutionTraceAvailable[x],"['IndirectBranchInstruction', 'ExecutionTraceAvailable']","['x', 'x']","[' x is an indirect branch instruction', ' execution trace of x is available']"
some x : everything | LogAnalysisTool[x] && Available[x] && DetectsChanges[x],"['LogAnalysisTool', 'Available', 'DetectsChanges']","['x', 'x', 'x']","[' x is a log analysis tool', ' x is available', ' x detects changes']"
all x : everything | InfrastructureComponent[x] && SupportsBroadcastIsolation[x],"['InfrastructureComponent', 'SupportsBroadcastIsolation']","['x', 'x']","[' x is an infrastructure component', ' x supports broadcast isolation features']"
some x : everything | Content[x] && (DetectedAsHarmful[x] || DetectedAsPolicyViolating[x]),"['Content', 'DetectedAsHarmful', 'DetectedAsPolicyViolating']","['x', 'x', 'x']","[' x is content', ' x is detected as potentially harmful', ' x is detected as policy-violating']"
"all x : everything | User[x] implies some y : everything | BaselineModel[y] && TypicalResourceAccessActivity[y,x]","['User', 'BaselineModel', 'TypicalResourceAccessActivity']","['x', 'y', 'y,x']","[' x is a user', ' y is a baseline model', ' y describes typical resource access activity for x ']"
"some x : everything | all y : everything | (EncryptionMechanism[y] || Key[y]) implies (Available[x, y] && Initialized[x, y])","['EncryptionMechanism', 'Key', 'Available', 'Initialized']","['y', 'y', 'x,y', 'x,y']","[' y is an encryption mechanism', ' y is a key', ' x has y available', ' x has y initialized']"
"all y : everything | URL[y] implies (some x : everything | System[x] && (Captures[x,y] || Receives[x,y]))","['URL', 'System', 'Captures', 'Receives']","['y', 'x', 'x,y', 'x,y']","[' y is a URL', ' x is a system', ' x captures y', ' x receives y']"
some x : everything | Endpoint[x] && ConfiguredToGenerateHeartbeat[x] && ConfiguredToTransmitHeartbeatSecurely[x] && MessageIntegrityEnabled[x],"['Endpoint', 'ConfiguredToGenerateHeartbeat', 'ConfiguredToTransmitHeartbeatSecurely', 'MessageIntegrityEnabled']","['x', 'x', 'x', 'x']","[' x is an endpoint', ' x is configured to generate heartbeat messages', ' x is configured to transmit heartbeat messages securely', ' x has message integrity mechanisms enabled']"
