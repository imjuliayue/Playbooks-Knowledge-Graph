"['D3-ET-I1', '(input) The system must have routable network traffic.', 'Encrypted encapsulation of routable network traffic.']","some x : everything, y : everything | System41[x] && NetworkTraffic[y] && Routable[y] && Has[x,y]","['System', 'NetworkTraffic', 'Routable', 'Has']","['x', 'y', 'y', 'x,y']","[' x is a system', ' y is network traffic', ' y is routable', ' w has x']"
"['D3-FCR-I2', '(input) The file must be in a format that the content scanning engine can parse and inspect.', 'Employing a pattern matching rule language to analyze the content of files.']","all w : everything | File42[w] => (some x : everything, y : everything | Format[x] && ContentScanningEngine[y] && InFormat[w, x] && CanParseAndInspect[y, x])","['File', 'Format', 'ContentScanningEngine', 'InFormat', 'CanParseAndInspect']","['w', 'x', 'y', 'w,x', 'y,x']","[' x is a file', ' x is a format', ' y is a content scanning engine', ' w is in format x ', ' y can parse and inspect x ']"
"['D3-EAL-I2', '(input) The file must contain or reference a digital signature that can be used for authenticity checks.', 'Using a digital signature to authenticate a file before opening.']","all x : everything | File43[x] => (some y : everything | DigitalSignature[y] && UsableForAuthenticityCheck[y] && (ContainsDigitalSignature[x, y] || ReferencesDigitalSignature[x, y]))","['File', 'DigitalSignature', 'ContainsDigitalSignature', 'ReferencesDigitalSignature', 'UsableForAuthenticityCheck']","['x', 'y', 'x, y', 'x, y', 'y']","[' x is a file', ' y is a digital signature', ' x contains y as a digital signature', ' x references y as a digital signature', ' y can be used for authenticity check']"
"['D3-ANET-I1', '(input) Authentication event logs must be available from one or more sources such as VPN server, LDAP, or directory server.', 'Collecting authentication events, creating a baseline user profile, and determining whether authentication events are consistent with the baseline profile.']",some x : everything | EventSource[x] && AuthenticationEventLogsAvailable[x],"['EventSource', 'AuthenticationEventLogsAvailable']","['x', 'x']","[' x is an event source', ' authentication event logs are available from x ']"
"['D3-CNE-C2', '(config) There must be preconfigured rules, policies, or signatures that define what elements should be removed.', 'Removing specific, potentially malicious, parts of content.']","some w : everything, x : everything | (Rule44[w] || Policy[w] || Signature[w]) && Element[x] && DefinesRemovalOf[w,x]","['Rule', 'Policy', 'Signature', 'Element', 'DefinesRemovalOf']","['w', 'w', 'w', 'x', 'w,x']","[' w is a rule', ' w is a policy', ' w is a signature', ' x is an element', ' w defines removal of x ']"
"['D3-CCSA-I2', '(input) Credential-related memory dumps such as lsass.exe or hiberfil.sys must be accessible.', 'Determining which credentials may have been compromised by analyzing the user logon history and possible sources of credential data such as memory and disk.']",all x : everything | CredentialRelatedMemoryDump[x] => Accessible[x],"['CredentialRelatedMemoryDump', 'Accessible']","['x', 'x']","[' x is a credential-related memory dump', ' x is accessible']"
"['D3-RAM-C4', '(config) Packet inspection (e.g., CBAC) must be enabled to monitor traffic flows.', 'A network-layer access control strategy using VPNs, tunnels, firewall rules, and traffic inspection to securely manage routing and prevent unauthorized access.']",all x : everything | (PacketInspection[x] && MonitorsTrafficFlows[x]) implies Enabled[x],"['PacketInspection', 'MonitorsTrafficFlows', 'Enabled']","['x', 'x', 'x']","[' x is packet inspection', ' x monitors traffic flows', ' x is enabled']"
"['D3-HDDL-I2', '(input) The system must be actively resolving DNS queries for the domain or subdomains.', 'Blocking the resolution of any subdomain of a specified domain name.']","all y : everything, z : everything, w : everything | DNSQuery[y] && ( (Domain[z] && ForDomain[y,z]) || (Subdomain[w] && ForSubdomain[y,w]) ) implies some x : everything | System45[x] && ActivelyResolving[x,y]","['System', 'DNSQuery', 'Domain', 'Subdomain', 'ForDomain', 'ForDomain', 'ActivelyResolving']","['x', 'y', 'z', 'w', 'y,z', 'y,w', 'x,y']","[' x is a system', ' x is a DNS query', ' x is a domain name', ' w is a subdomain', ' y is for w ', ' y is for w ', ' x is actively resolving y ']"
"['D3-WSAM-C4', '(config) The system must enforce a session management policy (e.g., token expiration, inactivity timeout).', 'Secures user sessions in web applications by employing robust authentication and integrity validation, along with adaptive threat mitigation techniques, to ensure that access to web resources is authorized and protected from session-related attacks.']","some x : everything, y : everything | System46[x] && SessionManagementPolicy[y] && Enforces47[x, y]","['System', 'SessionManagementPolicy', 'Enforces47']","['x', 'y', 'x, y']","[' x is a system', ' y is a session management policy', ' x enforces y ']"
"['D3-RAM-C5', '(config) Routing policies must be configured to direct traffic through secure paths.', 'A network-layer access control strategy using VPNs, tunnels, firewall rules, and traffic inspection to securely manage routing and prevent unauthorized access.']","all x : everything, y : everything | RoutingPolicy[x] && Traffic[y] => some z : everything | SecurePath[z] && DirectsThrough[x,y,z]","['RoutingPolicy', 'Traffic', 'SecurePath', 'DirectsThrough']","['x', 'y', 'z', 'x,y,z']","[' x is a routing policy', ' y is traffic', ' z is a secure path', ' x directs y through z ']"
"['D3-SFV-C3', '(config) Security module must be enabled to perform cryptographic verification.', 'Cryptographically verifying installed system firmware integrity by computing hash values and comparing them to known good values.']","all x : everything, y : everything | (SecurityModule[x] && CryptographicVerification[y] && Performs[x, y]) implies Enabled48[x]","['SecurityModule', 'CryptographicVerification', 'Performs', 'Enabled']","['x', 'y', 'x,y', 'x']","[' x is a security module', ' y is a cryptographic verification', ' x performs y ', ' x is enabled']"
"['D3-SDA-I2', '(input) current session duration must be measurable', 'Analyzing the duration of user sessions in order to detect unauthorized activity by comparing against historical behavior models.']",all x : everything | Session49[x] implies DurationMeasurable[x],"['Session', 'DurationMeasurable']","['x', 'x']","[' x is a session', ' the duration of x is measurable']"
"['D3-PAM-I1', '(input) The subject must possess a valid credential (e.g., badge, smart card) recognized by the access control system.', 'Physical access mediation is the process of granting or denying specific requests to enter specific physical facilities (e.g., Federal buildings, military establishments, border crossing entrances).']","all x : everything | Subject50[x] implies (some y : everything, z : everything | Credential[y] && AccessControlSystem[z] && Possesses[x,y] && Valid[y] && RecognizedBy[y,z])","['Subject', 'Credential', 'AccessControlSystem', 'Possesses', 'Valid', 'RecognizedBy']","['x', 'y', 'z', 'x,y', 'y', 'y,z']","[' x is a subject', ' y is a credential', ' z is an access control system', ' x possesses y ', ' y is valid', ' y is recognized by z ']"
"['D3-FRDDL-I1', '(input) A DNS query has been issued for a domain name.', ""Blocking a lookup based on the query's domain name value by filtering DNS queries using a denylist of unauthorized FQDNs.""]","some x : everything, y : everything | DNSQuery51[x] && DomainName[y] && IssuedFor[x,y]","['DNSQuery', 'Domain', 'IssuedFor']","['x', 'y', 'x,y']","[' x is a DNS query', ' x is a domain name', ' x is issued for y ']"
"['D3-NTCD-C3', '(config) The system must support logic for clustering or identifying communication communities (e.g., using graph-based techniques).', 'Establishing baseline communities of network hosts and identifying statistically divergent inter-community communication.']","some x : everything, y : everything | System52[x] && CommunicationCommunity[y] && (SupportsLogicFor[x,Clustering[y]] || SupportsLogicFor[x,Identifying[y]])","['System', 'CommunicationCommunity', 'SupportsLogicFor', 'Clustering', 'Identifying']","['x', 'y', 'x,w', 'w', 'w']","[' x is a system', ' y is a communication community', ' x supports logic for w ', ' w is clustering a communication community', ' w is identifying a communication community']"
"['D3-FCR-I3', '(input) A rule set (signature database) must be available and loaded into the rule engine for the scan to proceed.', 'Employing a pattern matching rule language to analyze the content of files.']","all z : everything | (Scan[z] && Proceeds[z]) implies (some x : everything, y : everything | RuleSet[x] && RuleEngine[y] && Available[x] && LoadedInto[x, y])","['Scan', 'Proceeds', 'RuleSet', 'RuleEngine', 'Available', 'LoadedInto']","['z', 'z', 'x', 'y', 'x', 'x,y']","[' z is a scan', ' z proceeds', ' x is a rule set', ' y is a rule engine', ' x is available', ' x is loaded into y ']"
"['D3-CNE-I1', '(input) The system must have access to the content in a form that allows inspection, such as an email, document, or file stream.', 'Removing specific, potentially malicious, parts of content.']","all x : everything, y : everything | System53[x] && Content54[y] implies (some z : everything | Form[z] && ContentInForm[y,z] && FormAllowsInspection[z] && HasAccessTo[x,y])","['System', 'Content', 'Form', 'ContentInForm', 'FormAllowsInspection', 'HasAccessTo']","['x', 'y', 'z', 'y,z', 'z', 'x,y']","[' x is a system', ' x is content', ' z is a form', ' y is in form z ', ' z allows inspection', ' x has access to y ']"
"['D3-AZET-I2', '(input) The system must support creating baseline behavior models from historical data.', 'Collecting authorization events, creating a baseline user profile, and determining whether authorization events are consistent with the baseline profile.']","all x : everything | System55[x] implies (some y : everything, z : everything | BaselineBehaviorModel[y] && HistoricalData[z] && CanCreateFrom[x, y, z])","['System', 'BaselineBehaviorModel', 'HistoricalData', 'CanCreateFrom']","['x', 'y', 'z', 'x, y, z']","[' x is a system', ' y is a baseline behavior model', ' z is historical data', ' x can create y from z ']"
"['D3-WSAM-C3', '(config) The web system must have an authentication mechanism (e.g., 2FA, SSO) configured and active.', 'Secures user sessions in web applications by employing robust authentication and integrity validation, along with adaptive threat mitigation techniques, to ensure that access to web resources is authorized and protected from session-related attacks.']","all x : everything | WebSystem[x] implies (some y : everything | AuthenticationMechanism[y] && Configured[y] && Active[y] && HasAuthenticationMechanism[x,y])","['WebSystem', 'AuthenticationMechanism', 'Configured', 'Active', 'HasAuthenticationMechanism']","['x', 'y', 'y', 'y', 'x,y']","[' x is a web system', ' y is an authentication mechanism', ' x is configured', ' y is active', ' x has authentication mechanism y ']"
"['D3-CNR-C2', '(config) A canonical format/schema must be defined to determine which components are allowed and how content must be reconstructed.', 'Rebuild the file according to the spec so any unreferenced components or objects are removed.']","some x : everything | CanonicalFormatOrSchema[x] && Defined[x] && (some y : everything | Allows[x,y]) && (some z : everything | SpecifiesReconstruction[x,z])","['CanonicalFormatOrSchema', 'Defined', 'Allows', 'SpecifiesReconstruction']","['x', 'x', 'x,y', 'x,z']","[' x is a canonical format or schema', ' x is defined', ' x allows y', ' x specifies how z is reconstructed']"
"['D3-KBPI-C2', '(config) The kernel must implement native features such as namespaces, control groups (cgroups), or SELinux/AppArmor policies for process isolation.', 'Using kernel-level capabilities to isolate processes.']","all x : everything | Kernel[x] implies some y : everything | NativeFeature[y] && Implements[x,y] && ProvidesProcessIsolation[y]","['Kernel', 'NativeFeature', 'Implements', 'ProvidesProcessIsolation']","['x', 'y', 'x,y', 'y']","[' x is a kernel', ' y is a native feature', ' x implements y ', ' y provides process isolation ']"
"['D3-UGLPA-C3', '(config) IP-to-geolocation resolution is enabled in the system', 'Monitoring geolocation data of user logon attempts and comparing it to a baseline user behavior profile to identify anomalies in logon location.']",some x : everything | System56[x] && IPToGeolocationResolutionEnabled[x],"['System', 'IPToGeolocationResolutionEnabled']","['x', 'x']","[' x is a system', ' IP-to-geolocation resolution is enabled in x ']"
"['D3-SFA-I1', '(input) The system must have a defined list of critical system files to monitor.', 'Monitoring system files such as authentication databases, configuration files, system logs, and system executables for modification or tampering.']","some w : everything, x : everything | System57[w] && List[x] && Has58[w,x] && all y : everything | Contains59[x, y] implies CriticalSystemFile[y]","['System', 'List', 'Has', 'Contains', 'CriticalSystemFile']","['w', 'x', 'w,x', 'x,y', 'y']","[' x is a system', ' x is a list', ' w has x', ' x contains y', ' y is a critical system file']"
"['D3-DNRA-I1', '(input) The domain name to be analyzed must be observed or captured from network or system activity.', 'Analyzing the reputation of a domain name.']","all x : everything | DomainName60[x] implies (some y : everything | (NetworkActivity[y] || SystemActivity[y]) && (ObservedFrom[x,y] || CapturedFrom[x,y]))","['Domain', 'NetworkActivity', 'SystemActivity', 'ObservedFrom', 'CapturedFrom']","['x', 'y', 'y', 'x,y', 'x,y']","[' x is a domain name', ' y is a network activity', ' y is a system activity', ' x is observed from y ', ' x is captured from y ']"
"['D3-ABPI-I1', '(input) The application must track execution contexts (e.g., tabs, iframes, subroutines) to enforce separation.', 'Application code which prevents its own subroutines from accessing intra-process / internal memory space.']","all x : everything, y : everything | Application[x] && ExecutionContext[y] && PartOf61[y,x] implies (Tracks[x,y] && EnforcesSeparation[x,y])","['Application', 'ExecutionContext', 'PartOf', 'Tracks', 'EnforcesSeparation']","['x', 'y', 'y,x', 'x,y', 'x,y']","[' x is an application', ' y is an execution context', ' y is part of x ', ' x tracks y ', ' x enforces separation for y ']"
"['D3-FCA-C2', '(config) Logging or monitoring of file system activity must be enabled.', 'Analyzing the properties of file create system call invocations.']",all x : everything | FileSystemActivity[x] implies (LoggingEnabled[x] || MonitoringEnabled[x]),"['FileSystemActivity', 'LoggingEnabled', 'MonitoringEnabled']","['x', 'x', 'x']","[' x is related to file system activity', ' logging of x is enabled', ' monitoring of x is enabled']"
"['D3-SBV-I1', '(input) Service binary files must exist on the system to be verified.', 'Analyzing changes in service binary files by comparing to a source of truth.']","all x : everything | ServiceBinaryFile[x] && ToBeVerified[x] implies (some y : everything | System62[y] && ExistsOn[x,y])","['ServiceBinaryFile', 'ToBeVerified', 'System', 'ExistsOn']","['x', 'x', 'y', 'x,y']","[' x is a service binary file', ' x is to be verified', ' x is a system', ' x exists on y']"
"['D3-DA-C4', '(config) System observability must be enabled within the sandbox to record behavior.', ""Executing or opening a file in a synthetic 'sandbox' environment to determine if the file is a malicious program or if the file exploits another program such as a document reader.""]","all y : everything | Sandbox[y] implies (some x : everything | SystemObservability[x] && EnabledIn[x,y] && RecordBehavior[x])","['Sandbox', 'SystemObservability', 'EnabledIn', 'RecordBehavior']","['y', 'x', 'x,y', 'x']","[' y is a sandbox', ' x is a system observability mechanism', ' x is enabled in y', ' x records behavior']"
"['D3-PFV-I2', '(input) A cryptographic hash function must be available on the system.', 'Cryptographically verifying installed system firmware integrity.']","all y : everything | System63[y] implies some x : everything | CryptographicHashFunction[x] && AvailableOn[x,y]","['System', 'CryptographicHashFunction', 'AvailableOn']","['y', 'x', 'x,y']","[' x is a system', ' x is a cryptographic hash function', ' x is available on y ']"
"['D3-FMBV-C3', '(config) The system must support functionality to read the leading bytes and compare them with the expected value.', 'Utilizing the magic number to verify the file.']","some x : everything, y : everything, z : everything, w : everything | System64[x] && FunctionalitySupportedBy[x,y] && ReadsLeadingBytes[y,z] && ComparesWithExpectedValue[y,z,w] && MagicNumber[w]","['System', 'FunctionalitySupportedBy', 'ReadsLeadingBytes', 'ComparesWithExpectedValue', 'MagicNumber']","['x', 'x,y', 'y,z', 'y,z,w', 'w']","[' x is a system', ' x supports functionality y ', ' y reads the leading bytes of z ', ' y compares z with expected value w ', ' w is a magic number ']"
"['D3-PAM-I2', '(input) The subject must initiate a request to access a specific physical facility at a given time.', 'Physical access mediation is the process of granting or denying specific requests to enter specific physical facilities (e.g., Federal buildings, military establishments, border crossing entrances).']","some x : everything, y : everything, z : everything, w : everything | Subject65[x] && PhysicalFacility[y] && Request[z] && Time[w] && InitiatesRequest[x,z] && RequestForAccessTo[z,y] && AtTime[z,w]","['Subject', 'PhysicalFacility', 'Request', 'Time', 'InitiatesRequest', 'RequestForAccessTo', 'AtTime']","['x', 'y', 'z', 'w', 'x,z', 'z,y', 'z,w']","[' x is a subject', ' y is a physical facility', ' z is a request', ' w is a time', ' x initiates request z', ' request z is for access to y', ' request z occurs at w']"
"['D3-RTA-I2', '(input) The system should maintain a baseline of typical RPC operations for comparison to detect anomalies.', 'Monitoring the activity of remote procedure calls in communication traffic to establish standard protocol operations and potential attacker activities.']","some x : everything, y : everything | System66[x] && Baseline67[y] && TypicalRPCOperation[y] && Maintains[x,y]","['System', 'Baseline', 'TypicalRPCOperation', 'Maintains']","['x', 'y', 'y', 'x,y']","[' x is a system', ' y is a baseline', ' y describes typical RPC operation(s)', ' x maintains y']"
"['D3-SDM-C4', '(config) Firewall service is hardened to detect unauthorized configuration changes.', 'Tracking changes to the state or configuration of critical system level processes.']","all x : everything | (FirewallService[x] && Hardened[x]) implies (all y : everything | ConfigurationChange[y] && Unauthorized[y] implies Detects[x,y])","['FirewallService', 'Hardened', 'ConfigurationChange', 'Unauthorized', 'Detected31']","['x', 'x', 'y', 'y', 'x,y']","[' x is a firewall service', ' x is hardened', ' y is a configuration change', ' y is unauthorized', ' x detects y']"
"['D3-LFP-I2', '(input) The system must have a policy or rule set indicating which users or groups should be allowed or denied access.', 'Restricting access to a local file by configuring operating system functionality.']","all x : everything | System68[x] implies (some y : everything | PolicyOrRuleSet[y] && HasPolicyOrRuleSet[x,y] && all z : everything | (User69[z] || Group[z]) implies SpecifiesAccess[y,z])","['System', 'PolicyOrRuleSet', 'HasPolicyOrRuleSet', 'User', 'Group', 'SpecifiesAccess']","['x', 'y', 'x,y', 'z', 'z', 'y,z']","[' x is a system', ' y is a policy or rule set', ' x has policy or rule set y', ' x is a user', ' z is a group', ' y specifies access for z']"
"['D3-ANAA-C3', '(config) The system must be configured to recognize administrative protocols (e.g., RDP, SSH, VNC).', 'Detection of unauthorized use of administrative network protocols by analyzing network activity against a baseline.']","all x : everything, y : everything | System70[x] && Protocol[y] && Administrative[y] implies Recognizes[x,y]","['System', 'Protocol', 'Administrative', 'Recognizes']","['x', 'y', 'y', 'x,y']","[' x is a system', ' y is a protocol', ' y is administrative', ' x recognizes y ']"
"['D3-CCSA-C4', '(config) Forensic tools capable of analyzing memory and disk contents must be available and configured.', 'Determining which credentials may have been compromised by analyzing the user logon history and possible sources of credential data such as memory and disk.']",all x : everything | ForensicTool[x] && (AnalyzesMemory[x] || AnalyzesDisk[x]) implies (Available71[x] && Configured72[x]),"['ForensicTool', 'AnalyzesMemory', 'AnalyzesDisk', 'Available', 'Configured']","['x', 'x', 'x', 'x', 'x']","[' x is a forensic tool', ' x is able to analyze memory', ' x is able to analyze disk contents', ' x is available', ' x is configured']"
"['D3-SJA-C3', '(config) Job monitoring must be enabled, and the system must be configured to allow access to external reputation services.', 'Analysis of source files, processes, destination files, or destination servers associated with a scheduled job to detect unauthorized use of job scheduling.']",all x : everything | JobMonitoring[x] implies Enabled73[x] && all y : everything | System74[y] implies ConfiguredToAllowAccessToExternalReputationServices[y],"['JobMonitoring', 'Enabled', 'System', 'ConfiguredToAllowAccessToExternalReputationServices']","['x', 'x', 'y', 'y']","[' x is job monitoring', ' x is enabled', ' x is a system', ' y is configured to allow access to external reputation services']"
"['D3-FISV-C2', '(config) The system must have access to the file format specification, including locations and expected values of structural elements.', 'The process of checking specific static values within a file, such as file signatures or magic numbers, to ensure they match the expected values defined by the file format specification.']","all x : everything, y : everything | (System75[x] && FileFormatSpecification[y]) implies HasAccessTo76[x, y]","['System', 'FileFormatSpecification', 'HasAccessTo']","['x', 'y', 'x,y']","[' x is a system', ' y is a file format specification', ' x has access to y ']"
"['D3-ITF-I1', '(input) The filtering device must be able to observe the source IP of the inbound connection.', 'Restricting network traffic originating from untrusted networks destined towards a private host or enclave.']","all x : everything, y : everything | FilteringDevice[x] && Inbound[y] implies CanObserveSourceIP[x,y]","['FilteringDevice', 'Inbound', 'CanObserveSourceIP']","['x', 'y', 'x,y']","[' x is a filtering device', ' y is inbound', ' x can observe the source IP of y ']"
"['D3-EDL-C2', '(config) Administrators must define and deploy rules that determine which files are denied execution.', 'Blocking the execution of files on a host in accordance with defined application policy rules.']","all x : everything | Administrator[x] implies (some y : everything | Rule77[y] && Defines[x,y] && Deploys[x,y] && (all z : everything | File78[z] && DeterminesDenial[y,z] implies DeniedExecution[z]))","['Administrator', 'Rule', 'Defines', 'Deploys', 'File', 'DeterminesDenial', 'DeniedExecution']","['x', 'y', 'x,y', 'x,y', 'z', 'y,z', 'z']","[' x is an administrator', ' w is a rule', ' x defines y ', ' x deploys y ', ' x is a file', ' y determines z is denied', ' z is denied execution']"
"['D3-FHRA-I2', '(input) A reputation source (e.g., VirusTotal, internal database) must be available to look up the hash.', 'Analyzing the reputation of a file hash.']","all x : everything | Hash[x] implies some y : everything | ReputationSource[y] && Available79[y] && CanLookup[y,x]","['Hash', 'ReputationSource', 'Available', 'CanLookup']","['x', 'y', 'y', 'y,x']","[' x is a hash', ' y is a reputation source', ' x is available', ' y can look up x ']"
"['D3-IOPR-C4', '(config) Allow/deny list is configured for device types and/or file types.', 'Limiting access to computer input/output (IO) ports to restrict unauthorized devices.']","some x : everything | ( (AllowList[x] || DenyList[x]) && ( (some y : everything | DeviceType[y] && ConfiguredFor[x, y]) || (some z : everything | FileType[z] && ConfiguredFor[x, z]) ) )","['AllowList', 'DenyList', 'DeviceType', 'File', 'ConfiguredFor']","['x', 'x', 'y', 'z', 'x,y / x,z']","[' x is an allow list', ' x is a deny list', ' y is a device type', ' x is a file', ' x is configured for y OR x is configured for z']"
"['D3-IBCA-I1', '(input) Execution trace of indirect branch instructions must be available.', 'Analyzing vendor-specific branch call recording (e.g., Intel Last Branch Recording) to detect Return-Oriented Programming (ROP) style attacks by inspecting sequences of indirect branching calls leading to system calls.']",all x : everything | IndirectBranchInstruction[x] implies ExecutionTraceAvailable[x],"['IndirectBranchInstruction', 'ExecutionTraceAvailable']","['x', 'x']","[' x is an indirect branch instruction', ' execution trace of x is available']"
"['D3-SDM-I1', '(input) Log analysis tool is available for detecting changes.', 'Tracking changes to the state or configuration of critical system level processes.']",some x : everything | LogAnalysisTool[x] && Available80[x] && DetectsChanges[x],"['LogAnalysisTool', 'Available', 'DetectsChanges']","['x', 'x', 'x']","[' x is a log analysis tool', ' x is available', ' x detects changes']"
"['D3-BDI-C4', '(config) The infrastructure (virtual or physical switches, hypervisors, routers, etc.) must support broadcast filtering/isolation features.', 'Broadcast isolation restricts the number of computers a host can contact on their LAN by segmenting or controlling broadcast traffic flow using configured policies and networking technology.']",all x : everything | InfrastructureComponent[x] && SupportsBroadcastIsolation[x],"['InfrastructureComponent', 'SupportsBroadcastIsolation']","['x', 'x']","[' x is an infrastructure component', ' x supports broadcast isolation features']"
"['D3-CQ-I1', '(input) The content must be detected as potentially harmful or policy-violating through scanning, signature matching, or heuristics.', 'Transfer content that does not comply with policy to a quarantine zone.']",some x : everything | Content81[x] && (DetectedAsHarmful[x] || DetectedAsPolicyViolating[x]),"['Content', 'DetectedAsHarmful', 'DetectedAsPolicyViolating']","['x', 'x', 'x']","[' x is content', ' x is detected as potentially harmful', ' x is detected as policy-violating']"
"['D3-RAPA-I1', ""(input) baseline model of the user's typical resource access activity must exist"", 'Analyzing the resources accessed by a user to identify unauthorized activity by comparing recent activity against a baseline model.']","all x : everything | User82[x] implies some y : everything | BaselineModel[y] && TypicalResourceAccessActivity[y,x]","['User', 'Baseline', 'TypicalResourceAccessActivity']","['x', 'y', 'y,x']","[' x is a user', ' y is a baseline', ' y describes typical resource access activity for x ']"
"['D3-ET-C3', '(config) Encryption mechanisms or keys must be available and initialized on the system.', 'Encrypted encapsulation of routable network traffic.']","some x : everything | all y : everything | (EncryptionMechanism[y] || Key[y]) implies (Available83[x, y] && Initialized[x, y])","['EncryptionMechanism', 'Key', 'Available83', 'Initialized']","['y', 'y', 'x,y', 'x,y']","[' y is an encryption mechanism', ' y is a key', ' x has y available', ' x has y initialized']"
"['D3-URA-I1', '(input) The system must capture or receive the URL for analysis, typically from telemetry, logs, or network traffic.', 'Analyzing the reputation of a URL.']","all y : everything | URL84[y] implies (some x : everything | System85[x] && (Captures[x,y] || Receives[x,y]))","['URL', 'System', 'Captures', 'Receives']","['y', 'x', 'x,y', 'x,y']","[' x is a URL', ' x is a system', ' x captures y', ' x receives y']"
"['D3-EHB-C3', '(config) The endpoint must be configured to generate and transmit heartbeat messages securely with message integrity mechanisms enabled.', 'Monitoring the security status of an endpoint by sending periodic messages with health status, where absence of a response may indicate that the endpoint has been compromised.']",some x : everything | Endpoint86[x] && ConfiguredToGenerateHeartbeat[x] && ConfiguredToTransmitHeartbeatSecurely[x] && MessageIntegrityEnabled[x],"['Endpoint', 'ConfiguredToGenerateHeartbeat', 'ConfiguredToGenerateHeartbeat', 'MessageIntegrityEnabled']","['x', 'x', 'x', 'x']","[' x is an endpoint', ' x is configured to generate heartbeat messages', ' x is configured to generate heartbeat messages', ' x has message integrity mechanisms enabled']"
